{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://scottlogic.com/datahelix.json",
  "definitions": {
    "schemaVersion": {
      "type": "string",
      "title": "The version of the DataHelix profile schema",
      "pattern": "^[0-9]+.[0-9]+$"
    },
    "temporal": {
      "type": "object",
      "properties": {
        "additionalProperties": false,
        "date": {
          "type": "string",
          "pattern": "^[0-9]{4}-[0-1][0-9]-([0-2][0-9]|3[01])T([0-1][0-9]|2[03]):[0-5][0-9]:[0-5][0-9].[0-9]{3}$"
        }
      }
    },
    "fieldName": {
      "title": "The name of a field to generate data for",
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": {"type": "string"}
      }
    },
    "grammaticalConstraint": {
      "oneOf": [
        {
          "$ref": "#/definitions/notConstraint"
        },
        {
          "$ref": "#/definitions/anyOfConstraint"
        },
        {
          "$ref": "#/definitions/allOfConstraint"
        },
        {
          "$ref": "#/definitions/ifConstraint"
        }
      ]
    },
    "dataConstraint": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "field": {"type": "string"},
        "is": {
          "enum": [
            "ofType", "equalTo", "aValid",
            "formattedAs", "matchingRegex", "containingRegex", "ofLength", "longerThan", "shorterThan",
            "null",
            "greaterThan", "lessThan", "greaterThanOrEqualTo", "lessThanOrEqualTo", "granularTo"
          ]
        }
      },
      "anyOf": [
        {
          "if": {
            "properties": {"is": {"const": "ofType"}}
          },
          "then": {
            "properties": {"value": {"enum": ["numeric", "string", "temporal"]}}
          }
        },
        {
          "if": {
            "properties": {"is": {"const": "null"}}
          },
          "then": {
            "properties": {"not": {}}
          }
        },
        {
          "if": {
            "properties": {"is": {"const": "formattedAs"}}
          },
          "then": {
            "properties": {"value": {"pattern": "^%.+$"}}
          }
        },
        {
          "if": {
            "properties": {"is": {"const": "matchingRegex"}}
          },
          "then": {
            "properties": {"value": {"type": "string"}}
          }
        },
        {
          "if": {
            "properties": {
              "is": {
                "enum": ["shorterThan", "longerThan", "greaterThan", "lessThan", "greaterThanOrEqualTo", "lessThanOrEqualTo", "granularTo"]
              }
            }
          },
          "then": {
            "properties": {"value": {"type": "number"}}
          }
        },
        {
          "if": {
            "properties": {"is": {"const": "aValid"}}
          },
          "then": {
            "properties": {"value": {"pattern": "^ISIN$"}}
          }
        }
      ]
    },
    "constraint": {
      "type": "array",
      "minItems": 1,
      "additionalItems": false,
      "title": "The constraints defining the enclosing rule.",
      "items": {
        "oneOf": [
          {
            "$ref": "#/definitions/grammaticalConstraint"
          },
          {
            "$ref": "#/definitions/dataConstraint"
          }
        ]
      }
    },
    "ofTypeConstraint": {
      "type": "object",
      "properties": {
        "additionalProperties": false,
        "ofType": {
          "type": "string",
          "enum": [
            "integer",
            "decimal",
            "string",
            "temporal"
          ]
        }
      }
    },
    "notConstraint": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "not": {"$ref": "#/definitions/constraint"}
      }
    },
    "anyOfConstraint": {
      "type": "object",
      "additionalProperties": false,
      "required": ["anyOf"],
      "properties": {
        "anyOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/constraint"
          }
        }
      }
    },
    "allOfConstraint": {
      "type": "object",
      "additionalProperties": false,
      "required": ["allOf"],
      "properties": {
        "allOf": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/constraint"
          }
        }
      }
    },
    "ifConstraint": {
      "type": "object",
      "additionalProperties": false,
      "required": ["if", "then"],
      "properties": {
        "if": {
          "type": "object"
        },
        "then": {
          "type": "object"
        }
      }
    }
  },
  "type": "object",
  "title": "The Scott Logic DataHelix Profile Schema",
  "required": ["schemaVersion", "fields", "rules"],
  "properties": {
    "additionalProperties": false,
    "schemaVersion": {
      "$ref": "#/definitions/schemaVersion"
    },
    "description": {
      "type": "string",
      "title": "A description of what data the profile is modelling"
    },
    "fields": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "additionalItems": false,
      "title": "Defines the fields that data will be produced for. field names must begin with an alphabetic character.",
      "items": {
        "$ref": "#/definitions/fieldName"
      }
    },
    "rules": {
      "type": "array",
      "minItems": 1,
      "additionalItems": false,
      "title": "The Rules defining the data to be output",
      "items": {
        "type": "object",
        "title": "A set of Rule objects.",
        "required": ["constraints"],
        "properties": {
          "additionalProperties": false,
          "rule": {
            "type": "string",
            "title": "A named collection of constraints. Test case generation revolves around rules, in that the generator will output a separate dataset for each rule, wherein each row violates the rule in a different way."
          },
          "constraints": {
            "$ref": "#/definitions/constraint"
          }
        }
      }
    }
  }
}